name: Development Build & Test

on:
  release:
    types: [ published ]
  pull_request:
  push:

jobs:

  "Lint":
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip' # caching pip dependencies
          cache-dependency-path: |
            **/pyproject.toml
      - name: Install library and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Lint
        run: ruff check src

  "Check_Format":
    name: "Check Format"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip' # caching pip dependencies
          cache-dependency-path: |
            **/pyproject.toml
      - name: Install library and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev]
      - name: Checking formatting with black
        run: black --check --diff src/

  # "Test":
  #   name: "Test: Py ${{ matrix.python-version }} + Torch ${{ matrix.pytorch-version }}"
  #   strategy:
  #     fail-fast: false  # Don't fail fast to explore which configurations fail
  #     matrix:
  #       # We do not want to waste too many resources on testing all combinations. Thus we test:
  #       # - on the oldest and the two most recent version of Python that we support (see README.md)
  #       #   (to catch if only the newest version breaks something)
  #       # - with the oldest version of the backend we support plus the two most recent major ones
  #       # - A single test on Windows and macOS to catch if something breaks there
  #       python-version: ['3.9', '3.10', '3.11']  # 3.12 is not yet supported by torch
  #       pytorch-version: ['1.11.0', '2.0.1', '2.1.1']
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Python ${{ matrix.python-version }}, PyTorch ${{ matrix.pytorch-version }}
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         cache: 'pip' # caching pip dependencies
  #         cache-dependency-path: |
  #           **/pyproject.toml
  #     - name: Install library and dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install torch==${{ matrix.pytorch-version }}
  #         pip install .[dev]
  #     - name: Test with pytest
  #       run: |
  #         pytest

  "Test":
    name: "Test: Py ${{ matrix.version-python }} + Torch ${{ matrix.version-pytorch }}"
    strategy:
      fail-fast: false  # Don't fail fast to explore which configurations fail
      matrix:
        # We do not want to waste too many resources on testing all combinations. Thus we test:
        # - on the oldest and the two most recent version of Python that we support (see README.md)
        #   (to catch if only the newest version breaks something)
        # - with the oldest version of the backend we support plus the two most recent major ones
        # - A single test on Windows and macOS to catch if something breaks there
        version-python: ['3.9', '3.10', '3.11']  # 3.12 is not yet supported by torch
        version-pytorch: ['1.11.0', '2.0.1', '2.1.1']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: "./.github/actions/run_tests"
        with:
          version-python: ${{ matrix.version-python }}
          version-pytorch: ${{ matrix.version-pytorch }}
